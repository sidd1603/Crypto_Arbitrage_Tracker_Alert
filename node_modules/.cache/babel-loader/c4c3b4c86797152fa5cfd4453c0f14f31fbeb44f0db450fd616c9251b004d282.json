{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (6)\\\\crypto_arbitrage_tracker_alert\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TrendingUp, AlertTriangle, Clock, DollarSign, ArrowUpDown } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  const [arbitrageOpportunities, setArbitrageOpportunities] = useState([]);\n\n  // Get top 50 cryptocurrencies\n  const getTopCryptos = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          order: 'market_cap_desc',\n          per_page: 50,\n          page: 1,\n          sparkline: false\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top cryptos:', error);\n      return [];\n    }\n  };\n\n  // Get price from Binance\n  const getBinancePrice = async symbol => {\n    try {\n      const response = await axios.get(`https://api.binance.com/api/v3/ticker/price?symbol=${symbol}USDT`);\n      return parseFloat(response.data.price);\n    } catch (error) {\n      return null;\n    }\n  };\n\n  // Get price from Coinbase\n  const getCoinbasePrice = async symbol => {\n    try {\n      const response = await axios.get(`https://api.coinbase.com/v2/prices/${symbol}-USD/spot`);\n      return parseFloat(response.data.data.amount);\n    } catch (error) {\n      return null;\n    }\n  };\n\n  // Get price from Kraken\n  const getKrakenPrice = async symbol => {\n    try {\n      const specialCases = {\n        \"BTC\": \"XBT\",\n        \"DOGE\": \"XDG\",\n        \"USDT\": \"USDTZ\"\n      };\n      const krakenSymbol = specialCases[symbol] || symbol;\n      const response = await axios.get(`https://api.kraken.com/0/public/Ticker?pair=${krakenSymbol}USD`);\n      if (response.data.result && Object.keys(response.data.result).length > 0) {\n        const pair = Object.keys(response.data.result)[0];\n        return parseFloat(response.data.result[pair].c[0]);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  // Detect arbitrage opportunities\n  const detectArbitrage = (prices, name) => {\n    const values = Object.values(prices).filter(v => v !== null && v > 0.01 && v < 100000);\n    if (values.length < 2) return null;\n    const minPrice = Math.min(...values);\n    const maxPrice = Math.max(...values);\n    const diff = (maxPrice - minPrice) / minPrice;\n    if (diff >= 0.01) {\n      return {\n        name,\n        minPrice,\n        maxPrice,\n        spread: diff * 100,\n        isError: diff >= 0.5\n      };\n    }\n    return null;\n  };\n\n  // Fetch crypto data\n  const fetchCryptoData = async () => {\n    const topCryptos = await getTopCryptos();\n    const cryptoData = [];\n    const opportunities = [];\n    for (const crypto of topCryptos.slice(0, 20)) {\n      // Limit to 20 for performance\n      const symbol = crypto.symbol.toUpperCase();\n      const [binancePrice, coinbasePrice, krakenPrice] = await Promise.all([getBinancePrice(symbol), getCoinbasePrice(symbol), getKrakenPrice(symbol)]);\n      const prices = {\n        Binance: binancePrice,\n        Coinbase: coinbasePrice,\n        Kraken: krakenPrice\n      };\n      const arbitrage = detectArbitrage(prices, crypto.name);\n      if (arbitrage) {\n        opportunities.push(arbitrage);\n      }\n      cryptoData.push({\n        ...crypto,\n        prices,\n        arbitrage\n      });\n    }\n    setCryptos(cryptoData);\n    setArbitrageOpportunities(opportunities);\n    setLastUpdate(new Date());\n  };\n  useEffect(() => {\n    const initialLoad = async () => {\n      setLoading(true);\n      await fetchCryptoData();\n      setLoading(false);\n    };\n    initialLoad();\n    const interval = setInterval(fetchCryptoData, 10000); // Update every 10 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const formatPrice = price => {\n    if (!price) return 'N/A';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 4\n    }).format(price);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"header-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), \" Crypto Arbitrage Tracker\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Monitor cryptocurrency prices across exchanges and spot arbitrage opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-update\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), \"Last updated: \", lastUpdate.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"DISCLAIMER:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), \" This software is for informational purposes only. Use at your own risk. Crypto prices may differ between exchanges. Always verify before trading.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading cryptocurrency data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [arbitrageOpportunities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arbitrage-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpDown, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), \" Arbitrage Opportunities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"opportunities-grid\",\n          children: arbitrageOpportunities.map((opp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `opportunity-card ${opp.isError ? 'error' : 'alert'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: opp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opportunity-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Buy at:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 48\n                }, this), \" \", formatPrice(opp.minPrice)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sell at:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 48\n                }, this), \" \", formatPrice(opp.maxPrice)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `spread ${opp.isError ? 'error-text' : 'alert-text'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Spread:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 49\n                }, this), \" \", opp.spread.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), \" Cryptocurrency Prices\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto-grid\",\n          children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crypto-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: crypto.image,\n                alt: crypto.name,\n                className: \"crypto-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: crypto.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"crypto-symbol\",\n                  children: crypto.symbol.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-list\",\n              children: [crypto.prices.Binance && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"exchange\",\n                  children: \"Binance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"price\",\n                  children: formatPrice(crypto.prices.Binance)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this), crypto.prices.Coinbase && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"exchange\",\n                  children: \"Coinbase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"price\",\n                  children: formatPrice(crypto.prices.Coinbase)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 45\n              }, this), crypto.prices.Kraken && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"exchange\",\n                  children: \"Kraken\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"price\",\n                  children: formatPrice(crypto.prices.Kraken)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), crypto.arbitrage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `arbitrage-indicator ${crypto.arbitrage.isError ? 'error' : 'alert'}`,\n              children: crypto.arbitrage.isError ? '⚠️ Possible Error' : '💰 Arbitrage Opportunity'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 41\n            }, this)]\n          }, crypto.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ritiiA5pLa9goR9gUhdX33eEVZU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TrendingUp","AlertTriangle","Clock","DollarSign","ArrowUpDown","jsxDEV","_jsxDEV","App","_s","cryptos","setCryptos","loading","setLoading","lastUpdate","setLastUpdate","Date","arbitrageOpportunities","setArbitrageOpportunities","getTopCryptos","response","get","params","vs_currency","order","per_page","page","sparkline","data","error","console","getBinancePrice","symbol","parseFloat","price","getCoinbasePrice","amount","getKrakenPrice","specialCases","krakenSymbol","result","Object","keys","length","pair","c","detectArbitrage","prices","name","values","filter","v","minPrice","Math","min","maxPrice","max","diff","spread","isError","fetchCryptoData","topCryptos","cryptoData","opportunities","crypto","slice","toUpperCase","binancePrice","coinbasePrice","krakenPrice","Promise","all","Binance","Coinbase","Kraken","arbitrage","push","initialLoad","interval","setInterval","clearInterval","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","toLocaleTimeString","map","opp","index","toFixed","src","image","alt","id","_c","$RefreshReg$"],"sources":["D:/New folder (6)/crypto_arbitrage_tracker_alert/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TrendingUp, AlertTriangle, Clock, DollarSign, ArrowUpDown } from 'lucide-react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [lastUpdate, setLastUpdate] = useState(new Date());\r\n    const [arbitrageOpportunities, setArbitrageOpportunities] = useState([]);\r\n\r\n    // Get top 50 cryptocurrencies\r\n    const getTopCryptos = async () => {\r\n        try {\r\n            const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    order: 'market_cap_desc',\r\n                    per_page: 50,\r\n                    page: 1,\r\n                    sparkline: false\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching top cryptos:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    // Get price from Binance\r\n    const getBinancePrice = async (symbol) => {\r\n        try {\r\n            const response = await axios.get(`https://api.binance.com/api/v3/ticker/price?symbol=${symbol}USDT`);\r\n            return parseFloat(response.data.price);\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Get price from Coinbase\r\n    const getCoinbasePrice = async (symbol) => {\r\n        try {\r\n            const response = await axios.get(`https://api.coinbase.com/v2/prices/${symbol}-USD/spot`);\r\n            return parseFloat(response.data.data.amount);\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Get price from Kraken\r\n    const getKrakenPrice = async (symbol) => {\r\n        try {\r\n            const specialCases = { \"BTC\": \"XBT\", \"DOGE\": \"XDG\", \"USDT\": \"USDTZ\" };\r\n            const krakenSymbol = specialCases[symbol] || symbol;\r\n            const response = await axios.get(`https://api.kraken.com/0/public/Ticker?pair=${krakenSymbol}USD`);\r\n\r\n            if (response.data.result && Object.keys(response.data.result).length > 0) {\r\n                const pair = Object.keys(response.data.result)[0];\r\n                return parseFloat(response.data.result[pair].c[0]);\r\n            }\r\n            return null;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Detect arbitrage opportunities\r\n    const detectArbitrage = (prices, name) => {\r\n        const values = Object.values(prices).filter(v => v !== null && v > 0.01 && v < 100000);\r\n        if (values.length < 2) return null;\r\n\r\n        const minPrice = Math.min(...values);\r\n        const maxPrice = Math.max(...values);\r\n        const diff = (maxPrice - minPrice) / minPrice;\r\n\r\n        if (diff >= 0.01) {\r\n            return {\r\n                name,\r\n                minPrice,\r\n                maxPrice,\r\n                spread: diff * 100,\r\n                isError: diff >= 0.5\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Fetch crypto data\r\n    const fetchCryptoData = async () => {\r\n        const topCryptos = await getTopCryptos();\r\n        const cryptoData = [];\r\n        const opportunities = [];\r\n\r\n        for (const crypto of topCryptos.slice(0, 20)) { // Limit to 20 for performance\r\n            const symbol = crypto.symbol.toUpperCase();\r\n\r\n            const [binancePrice, coinbasePrice, krakenPrice] = await Promise.all([\r\n                getBinancePrice(symbol),\r\n                getCoinbasePrice(symbol),\r\n                getKrakenPrice(symbol)\r\n            ]);\r\n\r\n            const prices = {\r\n                Binance: binancePrice,\r\n                Coinbase: coinbasePrice,\r\n                Kraken: krakenPrice\r\n            };\r\n\r\n            const arbitrage = detectArbitrage(prices, crypto.name);\r\n            if (arbitrage) {\r\n                opportunities.push(arbitrage);\r\n            }\r\n\r\n            cryptoData.push({\r\n                ...crypto,\r\n                prices,\r\n                arbitrage\r\n            });\r\n        }\r\n\r\n        setCryptos(cryptoData);\r\n        setArbitrageOpportunities(opportunities);\r\n        setLastUpdate(new Date());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const initialLoad = async () => {\r\n            setLoading(true);\r\n            await fetchCryptoData();\r\n            setLoading(false);\r\n        };\r\n\r\n        initialLoad();\r\n        const interval = setInterval(fetchCryptoData, 10000); // Update every 10 seconds\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const formatPrice = (price) => {\r\n        if (!price) return 'N/A';\r\n        return new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 4\r\n        }).format(price);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <h1><TrendingUp className=\"header-icon\" /> Crypto Arbitrage Tracker</h1>\r\n                    <p>Monitor cryptocurrency prices across exchanges and spot arbitrage opportunities</p>\r\n                    <div className=\"last-update\">\r\n                        <Clock size={16} />\r\n                        Last updated: {lastUpdate.toLocaleTimeString()}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"disclaimer\">\r\n                <AlertTriangle size={16} />\r\n                <strong>DISCLAIMER:</strong> This software is for informational purposes only.\r\n                Use at your own risk. Crypto prices may differ between exchanges. Always verify before trading.\r\n            </div>\r\n\r\n            {loading ? (\r\n                <div className=\"loading\">\r\n                    <div className=\"spinner\"></div>\r\n                    <p>Loading cryptocurrency data...</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"content\">\r\n                    {/* Arbitrage Opportunities */}\r\n                    {arbitrageOpportunities.length > 0 && (\r\n                        <div className=\"arbitrage-section\">\r\n                            <h2><ArrowUpDown className=\"section-icon\" /> Arbitrage Opportunities</h2>\r\n                            <div className=\"opportunities-grid\">\r\n                                {arbitrageOpportunities.map((opp, index) => (\r\n                                    <div key={index} className={`opportunity-card ${opp.isError ? 'error' : 'alert'}`}>\r\n                                        <h3>{opp.name}</h3>\r\n                                        <div className=\"opportunity-details\">\r\n                                            <p><strong>Buy at:</strong> {formatPrice(opp.minPrice)}</p>\r\n                                            <p><strong>Sell at:</strong> {formatPrice(opp.maxPrice)}</p>\r\n                                            <p className={`spread ${opp.isError ? 'error-text' : 'alert-text'}`}>\r\n                                                <strong>Spread:</strong> {opp.spread.toFixed(2)}%\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Crypto Price Table */}\r\n                    <div className=\"crypto-section\">\r\n                        <h2><DollarSign className=\"section-icon\" /> Cryptocurrency Prices</h2>\r\n                        <div className=\"crypto-grid\">\r\n                            {cryptos.map((crypto) => (\r\n                                <div key={crypto.id} className=\"crypto-card\">\r\n                                    <div className=\"crypto-header\">\r\n                                        <img src={crypto.image} alt={crypto.name} className=\"crypto-icon\" />\r\n                                        <div>\r\n                                            <h3>{crypto.name}</h3>\r\n                                            <p className=\"crypto-symbol\">{crypto.symbol.toUpperCase()}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"price-list\">\r\n                                        {crypto.prices.Binance && (\r\n                                            <div className=\"price-item\">\r\n                                                <span className=\"exchange\">Binance</span>\r\n                                                <span className=\"price\">{formatPrice(crypto.prices.Binance)}</span>\r\n                                            </div>\r\n                                        )}\r\n                                        {crypto.prices.Coinbase && (\r\n                                            <div className=\"price-item\">\r\n                                                <span className=\"exchange\">Coinbase</span>\r\n                                                <span className=\"price\">{formatPrice(crypto.prices.Coinbase)}</span>\r\n                                            </div>\r\n                                        )}\r\n                                        {crypto.prices.Kraken && (\r\n                                            <div className=\"price-item\">\r\n                                                <span className=\"exchange\">Kraken</span>\r\n                                                <span className=\"price\">{formatPrice(crypto.prices.Kraken)}</span>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {crypto.arbitrage && (\r\n                                        <div className={`arbitrage-indicator ${crypto.arbitrage.isError ? 'error' : 'alert'}`}>\r\n                                            {crypto.arbitrage.isError ? '⚠️ Possible Error' : '💰 Arbitrage Opportunity'}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}